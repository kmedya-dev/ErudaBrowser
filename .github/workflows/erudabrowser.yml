name: Build ErudaBrowser APK

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v3

      - name: 🧭 Show Project Tree
        run: |
          sudo apt install tree
          tree -L 2 || echo "tree failed"

      - name: ⚙️ Install GCC and Build Tools
        run: |
          sudo apt update
          sudo apt install -y build-essential
          gcc --version

      - name: 📦 Install System Dependencies
        run: |
          sudo apt install -y \
            zip unzip curl git python3 python3-pip \
            openjdk-17-jdk python3-setuptools python3-wheel \
            libffi-dev libssl-dev libsqlite3-dev zlib1g-dev

      - name: 📦 Download and Extract Android Command Line Tools
        run: |
          export ANDROID_SDK_ROOT=$HOME/android-sdk
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          cd "$ANDROID_SDK_ROOT/cmdline-tools"
          curl -O https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip
          unzip commandlinetools-linux-*.zip -d tmp
          mkdir -p latest
          mv tmp/cmdline-tools/* latest/

      - name: 🧩 Legacy sdkmanager path for Buildozer compatibility
        run: |
          mkdir -p ~/.buildozer/android/platform/android-sdk/tools/bin
          ln -sfn $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager ~/.buildozer/android/platform/android-sdk/tools/bin/sdkmanager
          echo "✅ Legacy sdkmanager path linked."

      - name: ⚙️ Set Android Environment Variables
        run: |
          echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
          echo "PATH=$HOME/android-sdk/cmdline-tools/latest/bin:$HOME/android-sdk/platform-tools:$HOME/android-sdk/emulator:$PATH" >> $GITHUB_ENV

      - name: 📦 Install Android SDK Packages
        run: |
          yes | sdkmanager --licenses
          sdkmanager --sdk_root=$HOME/android-sdk \
            "platform-tools" \
            "platforms;android-33" \
            "build-tools;33.0.2" \
            "ndk;25.1.8937393"

      - name: 🔗 Fix AIDL location for Buildozer
        run: |
          BUILD_TOOLS_DIR=$(find $HOME/android-sdk/build-tools -maxdepth 1 -type d | grep "33.0.2" || true)
          if [ -z "$BUILD_TOOLS_DIR" ]; then
            echo "❌ Build-tools 33.0.2 not found!"
            exit 1
          fi

          mkdir -p ~/.buildozer/android/platform/android-sdk/build-tools
          ln -sfn "$BUILD_TOOLS_DIR" ~/.buildozer/android/platform/android-sdk/build-tools/33.0.2

          echo "✅ AIDL path symlinked for Buildozer."

      - name: 🛠️ Install Buildozer and Cython
        run: |
          pip3 install --upgrade pip setuptools wheel
          pip3 install buildozer cython

      - name: 🛠️ Build APK with logs
        run: |
          buildozer --log-level=2 android debug | tee buildozer.log

      - name: 📄 Upload Buildozer Log
        uses: actions/upload-artifact@v4
        with:
          name: buildozer-log
          path: buildozer.log

      - name: 🔍 Check bin folder and APK presence
        run: |
          ls -alh bin/ || echo "bin/ folder does not exist"
          find . -name "*.apk" || echo "No APK found"

      - name: 📤 Upload Debug APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: ErudaBrowser-debug
          path: bin/*.apk

      - name: 📦 Upload Entire bin/ Folder (fallback)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bin-folder-dump
          path: bin/
