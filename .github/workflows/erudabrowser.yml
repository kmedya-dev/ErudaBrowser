name: Build & Release ErudaBrowser APK

on:
  push:
    branches: [main]
    tags:
      - 'v*'  # Auto-release on version tags like v1.0.0
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v3

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 🐍 Set up Python & Cache pip
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/buildozer-requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: 📦 Install Build & Python Dependencies
        run: |
          sudo apt update
          sudo apt install -y zip unzip curl git build-essential \
            python3-pip python3-setuptools python3-wheel \
            libffi-dev libssl-dev libsqlite3-dev zlib1g-dev tree

          pip install --upgrade pip
          pip install -r buildozer-requirements.txt
          pip install --no-cache-dir pysdl2

      - name: 📦 Set up Android SDK
        run: |
          export ANDROID_SDK_ROOT=$HOME/android-sdk
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          cd "$ANDROID_SDK_ROOT/cmdline-tools"
          curl -O https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip
          unzip commandlinetools-linux-*.zip -d tmp
          mkdir -p latest
          mv tmp/cmdline-tools/* latest/

          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH" >> $GITHUB_ENV

      - name: ✅ Install Android SDK Components
        run: |
          yes | sdkmanager --licenses
          sdkmanager \
            "platform-tools" \
            "platforms;android-33" \
            "build-tools;33.0.2" \
            "ndk;25.1.8937393"

      - name: 🔧 Patch SDK Paths for Buildozer
        run: |
          mkdir -p ~/.buildozer/android/platform/android-sdk/tools/bin
          ln -sfn $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager ~/.buildozer/android/platform/android-sdk/tools/bin/sdkmanager

          BUILD_TOOLS_DIR=$(find $ANDROID_SDK_ROOT/build-tools -maxdepth 1 -type d | grep "33.0.2" || true)
          mkdir -p ~/.buildozer/android/platform/android-sdk/build-tools
          ln -sfn "$BUILD_TOOLS_DIR" ~/.buildozer/android/platform/android-sdk/build-tools/33.0.2

      - name: 🛠️ Build APK
        run: |
          buildozer android clean
          buildozer --log-level=2 android debug | tee buildozer.log

      - name: 📄 Upload Build Log
        uses: actions/upload-artifact@v4
        with:
          name: buildozer-log
          path: buildozer.log

      - name: 📤 Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: ErudaBrowser-debug
          path: bin/*.apk

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Download APK Artifact
        uses: actions/download-artifact@v4
        with:
          name: ErudaBrowser-debug
          path: dist/

      - name: 🚀 Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          files: dist/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
